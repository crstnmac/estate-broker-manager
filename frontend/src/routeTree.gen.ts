/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as LayoutWorkflowsImport } from './routes/_layout/workflows'
import { Route as LayoutTeamsImport } from './routes/_layout/teams'
import { Route as LayoutTasksImport } from './routes/_layout/tasks'
import { Route as LayoutSettingsImport } from './routes/_layout/settings'
import { Route as LayoutReportsImport } from './routes/_layout/reports'
import { Route as LayoutPropertiesImport } from './routes/_layout/properties'
import { Route as LayoutMessagesImport } from './routes/_layout/messages'
import { Route as LayoutDocumentsImport } from './routes/_layout/documents'
import { Route as LayoutClientsImport } from './routes/_layout/clients'
import { Route as LayoutCalendarImport } from './routes/_layout/calendar'
import { Route as LayoutBillingImport } from './routes/_layout/billing'
import { Route as LayoutLeadsIndexImport } from './routes/_layout/leads/index'
import { Route as LayoutLeadsNewImport } from './routes/_layout/leads/new'
import { Route as LayoutLeadsLeadIdImport } from './routes/_layout/leads/$leadId'
import { Route as LayoutLeadsLeadIdEditImport } from './routes/_layout/leads/$leadId.edit'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutWorkflowsRoute = LayoutWorkflowsImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTeamsRoute = LayoutTeamsImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTasksRoute = LayoutTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSettingsRoute = LayoutSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutReportsRoute = LayoutReportsImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPropertiesRoute = LayoutPropertiesImport.update({
  id: '/properties',
  path: '/properties',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutMessagesRoute = LayoutMessagesImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDocumentsRoute = LayoutDocumentsImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutClientsRoute = LayoutClientsImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCalendarRoute = LayoutCalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBillingRoute = LayoutBillingImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLeadsIndexRoute = LayoutLeadsIndexImport.update({
  id: '/leads/',
  path: '/leads/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLeadsNewRoute = LayoutLeadsNewImport.update({
  id: '/leads/new',
  path: '/leads/new',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLeadsLeadIdRoute = LayoutLeadsLeadIdImport.update({
  id: '/leads/$leadId',
  path: '/leads/$leadId',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLeadsLeadIdEditRoute = LayoutLeadsLeadIdEditImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => LayoutLeadsLeadIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/billing': {
      id: '/_layout/billing'
      path: '/billing'
      fullPath: '/billing'
      preLoaderRoute: typeof LayoutBillingImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/calendar': {
      id: '/_layout/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof LayoutCalendarImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/clients': {
      id: '/_layout/clients'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof LayoutClientsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/documents': {
      id: '/_layout/documents'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof LayoutDocumentsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/messages': {
      id: '/_layout/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof LayoutMessagesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/properties': {
      id: '/_layout/properties'
      path: '/properties'
      fullPath: '/properties'
      preLoaderRoute: typeof LayoutPropertiesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/reports': {
      id: '/_layout/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof LayoutReportsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/tasks': {
      id: '/_layout/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof LayoutTasksImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/teams': {
      id: '/_layout/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof LayoutTeamsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/workflows': {
      id: '/_layout/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof LayoutWorkflowsImport
      parentRoute: typeof LayoutImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/leads/$leadId': {
      id: '/_layout/leads/$leadId'
      path: '/leads/$leadId'
      fullPath: '/leads/$leadId'
      preLoaderRoute: typeof LayoutLeadsLeadIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/leads/new': {
      id: '/_layout/leads/new'
      path: '/leads/new'
      fullPath: '/leads/new'
      preLoaderRoute: typeof LayoutLeadsNewImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/leads/': {
      id: '/_layout/leads/'
      path: '/leads'
      fullPath: '/leads'
      preLoaderRoute: typeof LayoutLeadsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/leads/$leadId/edit': {
      id: '/_layout/leads/$leadId/edit'
      path: '/edit'
      fullPath: '/leads/$leadId/edit'
      preLoaderRoute: typeof LayoutLeadsLeadIdEditImport
      parentRoute: typeof LayoutLeadsLeadIdImport
    }
  }
}

// Create and export the route tree

interface LayoutLeadsLeadIdRouteChildren {
  LayoutLeadsLeadIdEditRoute: typeof LayoutLeadsLeadIdEditRoute
}

const LayoutLeadsLeadIdRouteChildren: LayoutLeadsLeadIdRouteChildren = {
  LayoutLeadsLeadIdEditRoute: LayoutLeadsLeadIdEditRoute,
}

const LayoutLeadsLeadIdRouteWithChildren =
  LayoutLeadsLeadIdRoute._addFileChildren(LayoutLeadsLeadIdRouteChildren)

interface LayoutRouteChildren {
  LayoutBillingRoute: typeof LayoutBillingRoute
  LayoutCalendarRoute: typeof LayoutCalendarRoute
  LayoutClientsRoute: typeof LayoutClientsRoute
  LayoutDocumentsRoute: typeof LayoutDocumentsRoute
  LayoutMessagesRoute: typeof LayoutMessagesRoute
  LayoutPropertiesRoute: typeof LayoutPropertiesRoute
  LayoutReportsRoute: typeof LayoutReportsRoute
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutTasksRoute: typeof LayoutTasksRoute
  LayoutTeamsRoute: typeof LayoutTeamsRoute
  LayoutWorkflowsRoute: typeof LayoutWorkflowsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutLeadsLeadIdRoute: typeof LayoutLeadsLeadIdRouteWithChildren
  LayoutLeadsNewRoute: typeof LayoutLeadsNewRoute
  LayoutLeadsIndexRoute: typeof LayoutLeadsIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutBillingRoute: LayoutBillingRoute,
  LayoutCalendarRoute: LayoutCalendarRoute,
  LayoutClientsRoute: LayoutClientsRoute,
  LayoutDocumentsRoute: LayoutDocumentsRoute,
  LayoutMessagesRoute: LayoutMessagesRoute,
  LayoutPropertiesRoute: LayoutPropertiesRoute,
  LayoutReportsRoute: LayoutReportsRoute,
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutTasksRoute: LayoutTasksRoute,
  LayoutTeamsRoute: LayoutTeamsRoute,
  LayoutWorkflowsRoute: LayoutWorkflowsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutLeadsLeadIdRoute: LayoutLeadsLeadIdRouteWithChildren,
  LayoutLeadsNewRoute: LayoutLeadsNewRoute,
  LayoutLeadsIndexRoute: LayoutLeadsIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/billing': typeof LayoutBillingRoute
  '/calendar': typeof LayoutCalendarRoute
  '/clients': typeof LayoutClientsRoute
  '/documents': typeof LayoutDocumentsRoute
  '/messages': typeof LayoutMessagesRoute
  '/properties': typeof LayoutPropertiesRoute
  '/reports': typeof LayoutReportsRoute
  '/settings': typeof LayoutSettingsRoute
  '/tasks': typeof LayoutTasksRoute
  '/teams': typeof LayoutTeamsRoute
  '/workflows': typeof LayoutWorkflowsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof LayoutIndexRoute
  '/leads/$leadId': typeof LayoutLeadsLeadIdRouteWithChildren
  '/leads/new': typeof LayoutLeadsNewRoute
  '/leads': typeof LayoutLeadsIndexRoute
  '/leads/$leadId/edit': typeof LayoutLeadsLeadIdEditRoute
}

export interface FileRoutesByTo {
  '/billing': typeof LayoutBillingRoute
  '/calendar': typeof LayoutCalendarRoute
  '/clients': typeof LayoutClientsRoute
  '/documents': typeof LayoutDocumentsRoute
  '/messages': typeof LayoutMessagesRoute
  '/properties': typeof LayoutPropertiesRoute
  '/reports': typeof LayoutReportsRoute
  '/settings': typeof LayoutSettingsRoute
  '/tasks': typeof LayoutTasksRoute
  '/teams': typeof LayoutTeamsRoute
  '/workflows': typeof LayoutWorkflowsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof LayoutIndexRoute
  '/leads/$leadId': typeof LayoutLeadsLeadIdRouteWithChildren
  '/leads/new': typeof LayoutLeadsNewRoute
  '/leads': typeof LayoutLeadsIndexRoute
  '/leads/$leadId/edit': typeof LayoutLeadsLeadIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/billing': typeof LayoutBillingRoute
  '/_layout/calendar': typeof LayoutCalendarRoute
  '/_layout/clients': typeof LayoutClientsRoute
  '/_layout/documents': typeof LayoutDocumentsRoute
  '/_layout/messages': typeof LayoutMessagesRoute
  '/_layout/properties': typeof LayoutPropertiesRoute
  '/_layout/reports': typeof LayoutReportsRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/tasks': typeof LayoutTasksRoute
  '/_layout/teams': typeof LayoutTeamsRoute
  '/_layout/workflows': typeof LayoutWorkflowsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/leads/$leadId': typeof LayoutLeadsLeadIdRouteWithChildren
  '/_layout/leads/new': typeof LayoutLeadsNewRoute
  '/_layout/leads/': typeof LayoutLeadsIndexRoute
  '/_layout/leads/$leadId/edit': typeof LayoutLeadsLeadIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/billing'
    | '/calendar'
    | '/clients'
    | '/documents'
    | '/messages'
    | '/properties'
    | '/reports'
    | '/settings'
    | '/tasks'
    | '/teams'
    | '/workflows'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/leads/$leadId'
    | '/leads/new'
    | '/leads'
    | '/leads/$leadId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/billing'
    | '/calendar'
    | '/clients'
    | '/documents'
    | '/messages'
    | '/properties'
    | '/reports'
    | '/settings'
    | '/tasks'
    | '/teams'
    | '/workflows'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/leads/$leadId'
    | '/leads/new'
    | '/leads'
    | '/leads/$leadId/edit'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/billing'
    | '/_layout/calendar'
    | '/_layout/clients'
    | '/_layout/documents'
    | '/_layout/messages'
    | '/_layout/properties'
    | '/_layout/reports'
    | '/_layout/settings'
    | '/_layout/tasks'
    | '/_layout/teams'
    | '/_layout/workflows'
    | '/auth/login'
    | '/auth/register'
    | '/_layout/'
    | '/_layout/leads/$leadId'
    | '/_layout/leads/new'
    | '/_layout/leads/'
    | '/_layout/leads/$leadId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/billing",
        "/_layout/calendar",
        "/_layout/clients",
        "/_layout/documents",
        "/_layout/messages",
        "/_layout/properties",
        "/_layout/reports",
        "/_layout/settings",
        "/_layout/tasks",
        "/_layout/teams",
        "/_layout/workflows",
        "/_layout/",
        "/_layout/leads/$leadId",
        "/_layout/leads/new",
        "/_layout/leads/"
      ]
    },
    "/_layout/billing": {
      "filePath": "_layout/billing.tsx",
      "parent": "/_layout"
    },
    "/_layout/calendar": {
      "filePath": "_layout/calendar.tsx",
      "parent": "/_layout"
    },
    "/_layout/clients": {
      "filePath": "_layout/clients.tsx",
      "parent": "/_layout"
    },
    "/_layout/documents": {
      "filePath": "_layout/documents.tsx",
      "parent": "/_layout"
    },
    "/_layout/messages": {
      "filePath": "_layout/messages.tsx",
      "parent": "/_layout"
    },
    "/_layout/properties": {
      "filePath": "_layout/properties.tsx",
      "parent": "/_layout"
    },
    "/_layout/reports": {
      "filePath": "_layout/reports.tsx",
      "parent": "/_layout"
    },
    "/_layout/settings": {
      "filePath": "_layout/settings.tsx",
      "parent": "/_layout"
    },
    "/_layout/tasks": {
      "filePath": "_layout/tasks.tsx",
      "parent": "/_layout"
    },
    "/_layout/teams": {
      "filePath": "_layout/teams.tsx",
      "parent": "/_layout"
    },
    "/_layout/workflows": {
      "filePath": "_layout/workflows.tsx",
      "parent": "/_layout"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/leads/$leadId": {
      "filePath": "_layout/leads/$leadId.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/leads/$leadId/edit"
      ]
    },
    "/_layout/leads/new": {
      "filePath": "_layout/leads/new.tsx",
      "parent": "/_layout"
    },
    "/_layout/leads/": {
      "filePath": "_layout/leads/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/leads/$leadId/edit": {
      "filePath": "_layout/leads/$leadId.edit.tsx",
      "parent": "/_layout/leads/$leadId"
    }
  }
}
ROUTE_MANIFEST_END */
